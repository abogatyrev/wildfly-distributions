ospackage {
    println "RPM artifacts: \n" +
            "1. ${distributionPackageName}-${distributionPackageVersion}-${distributionPackageRelease}.noarch.rpm\n" +
            "2. ${distributionPackageName}-dev-${distributionPackageVersion}-${distributionPackageRelease}.noarch.rpm"
    distributionTags = "${distributionTags}".split(',')
    println "Tags: ${distributionTags}"

    version = "${distributionPackageVersion}"
    release = "${distributionPackageRelease}"

    user = 'root'
    permissionGroup = 'root'

    // arch = X86_64 - wildfly not depend on CPU architecture
    os = LINUX
    type = BINARY

    license = "${distributionPackageLicense}"
    url = "${distributionPackageUrl}"

    packager = 'Andrey Bogatyrev'
    buildHost = 'localhost'

    distributionTags.each {
        provides("$it".trim())
    }

    requires('java-1.8.0', '1.8', GREATER | EQUAL)

    from('/resources/wildfly-10.1.0.Final/') {
        into '/opt/wildfly'
        createDirectoryEntry = true
    }

    preInstall file('/scripts/preInstall.sh')
    postInstall file('/scripts/postInstall.sh')
    preUninstall file('/scripts/preUninstall.sh')
    postUninstall file('/scripts/postUninstall.sh')
}

task buildWildfly10FinalProdRpm(type: Rpm) {
    packageName = "${distributionPackageName}"
    packageDescription = "${distributionPackageDescription}"

    conflicts("${distributionPackageName}-dev")

    from('/resources/standalone/wildfly.conf') {
        into '/etc/wildfly'
    }
    from('/resources/standalone/wildfly.service') {
        into '/etc/systemd/system'

        addParentDirs = false
        createDirectoryEntry = true
    }
    from('/resources/standalone/launch.sh') {
        into '/opt/wildfly/bin'
    }
}

task buildWildfly10FinalDevRpm(type: Rpm) {
    packageName = "${distributionPackageName}-dev"
    packageDescription = "${distributionPackageDescription} Configured for developing wildfly applications."

    conflicts("${distributionPackageName}")

    provides('wildfly-server-dev')

    from('/resources/standalone-dev/wildfly.conf') {
        into '/etc/wildfly'
    }
    from('/resources/standalone-dev/wildfly.service') {
        into '/etc/systemd/system'
    }
    from('/resources/standalone-dev/launch.sh') {
        into '/opt/wildfly/bin'
    }
    from('/resources/standalone-dev/standalone.xml') {
        into '/opt/wildfly/standalone/configuration'
    }
}

artifacts {
    distributions file: new File("${buildDir}/distributions", "${distributionPackageName}-dev-${distributionPackageVersion}-${distributionPackageRelease}.noarch.rpm"),
            name: "${distributionPackageName}-dev", type: 'rpm', classifier: 'noarch'
}

task buildAndPublish(dependsOn: [buildWildfly10FinalProdRpm, buildWildfly10FinalDevRpm, uploadDistributions], overwrite: true) {}
uploadDistributions.mustRunAfter([buildWildfly10FinalProdRpm, buildWildfly10FinalDevRpm])