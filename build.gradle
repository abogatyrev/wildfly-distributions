apply from: 'properties.gradle'

buildscript {
    repositories {
        mavenLocal()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.netflix.nebula:gradle-ospackage-plugin:${gradleOspackagePlugin}"
    }
}

subprojects {
    if (project.parent.name == 'wildfly-modules' || project.parent.name == 'wildfly-server') {
        apply plugin: 'nebula.ospackage'
        apply plugin: 'maven-publish'

        if (project.parent.name == 'wildfly-modules') {
            // in case of conflicts need to use: rpm -iv --replacefiles rpm_name.rpm
            ospackage {
                println "RPM artifact: ${distributionPackageName}-${distributionPackageVersion}-${distributionPackageRelease}.noarch.rpm"
                distributionTags = "${distributionTags}".split(',')
                println "Tags: ${distributionTags}"

                packageName = "${distributionPackageName}"
                version = "${distributionPackageVersion}"
                release = "${distributionPackageRelease}"

                user = 'wildfly'
                permissionGroup = 'wildfly'

                os = LINUX
                type = BINARY

                license = "${distributionPackageLicense}"
                url = "${distributionPackageUrl}"

                packager = 'Andrey Bogatyrev'
                packageDescription = "${distributionPackageDescription}"

                distributionTags.each {
                    provides("$it".trim())
                }

                requires('wildfly')

                from('/resources') {
                    into '/opt/wildfly/modules'
                }

//            postInstall file('../_resources/rpm/scripts/echo_restart_wildfly.sh')
            }
        }

        publishing {
            repositories {
                maven {
                    name 'distribution'
                    url 'http://nexus.avbsoft.org/repository/wildfly-distributions/'
                    allowInsecureProtocol true

                    credentials {
                        username = "${nexusUsername}"
                        password = "${nexusPassword}"
                    }
                }
            }
        }

        publishing {
            publications {
                rpm(MavenPublication) {
                    artifacts {
                        artifact("${buildDir}/distributions/${distributionPackageName}-${distributionPackageVersion}-${distributionPackageRelease}.noarch.rpm") {
                            artifactId "${distributionPackageName}"
                            classifier 'noarch'
                            extension 'rpm'
                            version "${distributionPackageVersion}-${distributionPackageRelease}"
                        }
                    }
                    pom {
                        packaging = 'rpm'
                    }
                }
            }
        }
        task buildAndPublish(dependsOn: [buildRpm, publishRpmPublicationToDistributionRepository]) {}
        publishRpmPublicationToDistributionRepository.mustRunAfter([buildRpm])
    }
}

task Wrapper(type: Wrapper) { // run > gradle wrapper
    gradleVersion = "${gradleVersion}"
}
